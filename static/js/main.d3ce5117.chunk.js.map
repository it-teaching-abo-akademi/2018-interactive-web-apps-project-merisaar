{"version":3,"sources":["serviceWorker.js","components/stockData.js","components/Popup.js","components/graphDraw.js","components/portfolio.js","index.js"],"names":["Boolean","window","location","hostname","match","Stock","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this","react_default","a","createElement","stock","name","uv","currencySymbol","quantity","tv","onChange","e","setChecked","id","defaultChecked","checked","type","React","Component","PopUp","show","className","style","backdropStyle","position","top","bottom","left","right","backgroundColor","padding","modalStyle","borderRadius","maxWidth","minHeight","margin","children","onClick","onClose","Graph","closeModal","setState","open","onCloseModal","state","stocks","chartData","stockData","drawStockValueCurves","bind","assertThisInitialized","fetch","then","response","json","data","keys","dataL","days","reverse","values","map","day","concat","alert","list","selectIdList","j","length","select","document","getElementById","i","option","text","add","nameList","l","sD","Promise","all","_ref","asyncToGenerator","regenerator_default","mark","_callee2","wrap","_context2","prev","next","abrupt","_this2","fetchStockData","stop","_x2","apply","arguments","result","toConsumableArray","assign","time1","time2","addListToSelectTag","drawGraph","idx1","indexOf","idx2","namelist","isUndefined","realList","push","dataPoints","parseFloat","Array","isArray","_unused","_this3","index_es","center","classNames","overlay","styles","customOverlay","modal","customModal","value","index_esm","chartType","width","height","options","title","curveType","legend","Portfolio","popUpModal","isOpen","countTotal","total","toFixed","totalValuOfStocks","saveStock","newStock","newstock","objectSpread","toUpperCase","trim","totalv","len","newStocksList","updatePortfolioState","onOpenModal","stopPropagation","currency","newName","fetchCurrencyRate","changeName","saveNameChange","cancelNameChange","removeSelected","arr1","arr2","copyStocks","newTotalValue","cur1","cur2","curSymb","cr","results","val","stocksC","forEach","st","el","target","input","parentElement","firstChild","hasAttribute","removeAttribute","setAttribute","_this4","div","nextSibling","_this5","n","split","cpy","_this6","selected","filter","clist","getElementsByTagName","_this7","stocksCpy","s","_this8","renObjData","index","stockData_Stock","key","openModal","graphDraw_Graph","src","closePortfolio","hidden","hideTextShowInput","Popup","App","onSetResult","localStorage","setItem","JSON","stringify","portfolio","pf","getItem","parse","addNewPortfolio","portfolioId","pfCopy","pC","p","Math","max","setId","newPortfolio","portfolio_Portfolio","totalValue","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d3ce5117.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\n\nexport default class Stock extends React.Component {\n  constructor(props){\n    super(props);\n  }\n\n  render() {\n  return (\n    <tr>\n      <td><p>{this.props.stock.name}</p></td>\n      <td><p>{this.props.stock.uv}{this.props.currencySymbol}</p></td>\n      <td><p>{this.props.stock.quantity}</p></td>\n      <td><p>{this.props.stock.tv}{this.props.currencySymbol}</p></td>\n      <td><input onChange={(e) => {this.props.setChecked(e, this.props.stock.id)}} id ={'check-' +this.props.stock.id} defaultChecked = {this.props.stock.checked} type=\"checkbox\" ></input></td>\n    </tr>\n    \n  )\n  }\n}\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass PopUp extends React.Component {\r\n  render() {\r\n    // Render nothing if the \"show\" prop is false\r\n    if(!this.props.show) {\r\n      return null;\r\n    }\r\n\r\n    // The gray background\r\n    const backdropStyle = {\r\n      position: 'fixed',\r\n      top: 0,\r\n      bottom: 0,\r\n      left: 5,\r\n      right: 0,\r\n      backgroundColor: 'rgba(0,0,0,0.3)',\r\n      padding: 50\r\n    };\r\n\r\n    // The modal \"window\"\r\n    const modalStyle = {\r\n      backgroundColor: '#fff',\r\n      borderRadius: 5,\r\n      maxWidth: 500,\r\n      minHeight: 300,\r\n      margin: '0 auto',\r\n      padding: 30\r\n    };\r\n\r\n    return (\r\n      <div className=\"backdrop\" style={{backdropStyle}}>\r\n        <div className=\"modal\" style={{modalStyle}}>\r\n          {this.props.children}\r\n\r\n          <div className=\"footer\">\r\n            <button onClick={this.props.onClose}>\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPopUp.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  show: PropTypes.bool,\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default PopUp;","import React from 'react'\nimport Chart from \"react-google-charts\";\nimport Modal from 'react-responsive-modal';\nimport styles from '../custom-styling.css';\n\nexport default class Graph extends React.Component{ \n  constructor(props) {\n    super(props);\n    this.state = {\n      stocks: this.props.stocks,\n      chartData: [],\n      stockData: [],\n      open: this.props.open,\n    };\n    this.drawStockValueCurves = this.drawStockValueCurves.bind(this)\n    // this.onOpenModal = this.onOpenModal.bind(this)\n    this.drawStockValueCurves()\n  }\n\n  //Closes modal\n  closeModal = () => {\n    this.setState({ open: false });\n    this.props.onCloseModal()\n  };\n  //Fetches stock data for past 10 recorded dates\n  async fetchStockData(name){\n    // return await fetch('https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=MSFT&apikey=demo')\n    return await fetch('https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=' + name + '&apikey=XDNRE3YNSC6MJXBQ')\n    .then(response => response.json())\n    .then(data => {\n      if(Object.keys(data)[0] === 'Note' || Object.keys(data)[0] === 'Error Message'){\n        alert('Only 5 request are allowed in one minute (by API)')\n      }else {\n        let dataL = data['Time Series (Daily)']\n        let days = Object.keys(dataL).reverse()\n        let values = []\n        values = days.map(day => values.concat(dataL[day])[0])\n        return [values, days]\n      }\n    })\n  }\n  addListToSelectTag(list, selectIdList) {\n    for(var j = 0; j<selectIdList.length; j++){  \n      let select = document.getElementById(selectIdList[j])\n      for(var i = 0; i<list.length; i++){\n        var option = document.createElement(\"option\")\n        option.text = list[i]\n        select.add(option)\n        }\n      }\n  }\n //Draws curve\n async drawStockValueCurves() {\n  let stocks = this.state.stocks\n  let nameList = stocks.map(l => l.name)\n  let sD = []\n  await Promise.all(nameList.map(async (name) => \n    this.fetchStockData(name))).then(result => {\n      sD = [...result];\n      this.setState({stockData: Object.assign([], result)});\n    })\n  if(sD.length !== 0){\n  let time1 = sD[0][1][sD[0][1].length-11]\n  let time2 = sD[0][1][sD[0][1].length-1]\n  this.addListToSelectTag(sD[0][1], ['time1', 'time2'])\n  this.drawGraph(time1, time2)\n  }\n}\n\ndrawGraph(time1, time2){\n  let sD = Object.assign([], this.state.stockData)\n  let idx1 = sD[0][1].indexOf(time1)\n  let idx2 = sD[0][1].indexOf(time2)\n  if(!(idx1 <= idx2)){\n    alert('Time invalid')\n  } else {\n    let stocks = [...this.state.stocks]\n    let list = ['Time']\n    let namelist = stocks.map(l => l.name)\n    list =list.concat(namelist)\n    let isUndefined = false\n    let realList = []\n    realList.push(list)\n    try{\n      for(var i = idx1; i<idx2+1; i++){\n        let dataPoints = []\n        dataPoints = [sD[0][1][i]]\n        for(var j = 0; j<sD.length; j++){\n          dataPoints = dataPoints.concat(parseFloat(Object.values(sD[j][0][i])[0]))\n        }\n        if(!Array.isArray(dataPoints)){\n          isUndefined = true\n          break;\n        }\n        realList.push(dataPoints)\n      }\n    }catch{\n    }\n    if(isUndefined === false){\n      this.setState({\n        chartData: realList,\n      });\n    } else {\n      alert('Only 5 request are allowed in one minute (by API)')\n    }\n    }\n}\n\nrender() {\n  const options = {\n    title: \"Stock value\",\n    curveType: \"function\",\n    legend: { position: \"bottom\" }\n  };\n  return(\n    <Modal \n        open={this.state.open} \n        onClose={this.closeModal} \n        center\n        classNames={{\n          overlay: styles.customOverlay,\n          modal: styles.customModal,\n        }}\n        >\n\n    <div>\n    <h2>Graph</h2>\n    Select by time\n    <select id='time1'><option>Select starting time</option></select>\n    <select id='time2'><option>Select ending time</option></select>        \n    <button onClick={(e) => {this.drawGraph(document.getElementById('time1').value, document.getElementById('time2').value)}}>Search</button>\n    <Chart\n      chartType=\"LineChart\"\n      width=\"700px\"\n      height=\"400px\"\n      data={this.state.chartData}\n      options={options}\n    />\n    </div>\n\n        </Modal>\n  )\n}\n}","import React from 'react'\nimport Stock from './stockData.js'\nimport '../App.css';\nimport PopUp from './Popup';\nimport Graph from './graphDraw';\n\nexport default class Portfolio extends React.Component{\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      stocks: this.props.stocks,\n      totalValuOfStocks:this.props.total,\n      currency: 'EUR',\n      newName: '',\n      name: this.props.name,\n      id: this.props.id,\n      isOpen: false,\n      open:false,\n      newStock: {name : '', uv : 0, quantity : 0, tv:0},\n      chartData: [],\n      stockData: [],\n      currencySymbol: '€',\n    };\n    this.fetchCurrencyRate = this.fetchCurrencyRate.bind(this)\n    this.changeName =this.changeName.bind(this)\n    this.saveNameChange =this.saveNameChange.bind(this)\n    this.cancelNameChange =this.cancelNameChange.bind(this)\n    this.saveStock = this.saveStock.bind(this)\n    this.newStock = this.newStock.bind(this)\n    this.removeSelected = this.removeSelected.bind(this)\n    this.setChecked = this.setChecked.bind(this)\n    this.onOpenModal = this.onOpenModal.bind(this)\n\n  }\n  //Checks if arrays are equal\n  arraysEqual(arr1, arr2) {\n    if(arr1.length !== arr2.length)\n        return false;\n    for(var i = arr1.length; i--;) {\n        if(arr1[i] !== arr2[i])\n            return false;\n    }\n\n    return true;\n}\n//On component mount updates totals of stocks\n  componentDidMount() {\n    let copyStocks = [...this.props.stocks]\n    let newTotalValue = 0\n    for(var i = 0; i<copyStocks.length; i++){\n      let total = copyStocks[i].uv*copyStocks[i].quantity\n      copyStocks[i].tv = total.toFixed(2)\n      copyStocks[i].checked = false\n      newTotalValue = total + newTotalValue\n    }\n    newTotalValue = newTotalValue.toFixed(2)\n    this.setState({\n      stocks: copyStocks,\n      totalValuOfStocks: newTotalValue\n  }, () => {\n    this.props.updatePortfolioState(this.state.id, this.state.stocks, this.state.name)\n  });\n  }\n\n  //Fetches currency rate from API on click\n  fetchCurrencyRate(e, cur1, cur2, curSymb) {\n    e.stopPropagation();\n    fetch('https://free.currencyconverterapi.com/api/v6/convert?q=' + cur1 + '_' + cur2)\n      .then(response => response.json())\n      .then(data => {\n        if(cur2 !== this.state.currency){          \n          var cr = data.results[cur1 + '_'+ cur2].val\n          const stocksC =[...this.state.stocks]\n          stocksC.forEach(function(st){\n            st.uv = (st.uv*cr).toFixed(2)\n            st.tv = (st.uv*st.quantity).toFixed(2)\n          })\n          this.setState({\n            stocks: stocksC,\n            currency: cur2,\n            currencySymbol: curSymb,\n        }, () => {\n          // this.props.updatePortfolioState(this.state.id, this.state.stocks, this.state.name)\n          this.countTotal()\n        });\n      }\n      })\n  }\n\n  //Toggles input and text\n  hideTextShowInput(e){\n    e.stopPropagation();\n    let el = e.target\n    let input = el.parentElement.firstChild\n    if(el.hasAttribute(\"hidden\")){\n       el.removeAttribute(\"hidden\")\n    }else{ \n      el.setAttribute(\"hidden\", true)}\n      input.removeAttribute(\"hidden\")\n  }\n  //Store name while typing\n  changeName(e){\n    e.stopPropagation();\n    this.setState({\n      newName:e.target.value,\n    })\n  }\n  //Saves modified portfolio name\n  saveNameChange(e){\n    e.stopPropagation();\n    if(this.state.newName.trim().length>0){\n      this.setState({\n        name: this.state.newName.trim()\n    }, () => {\n      this.props.updatePortfolioState(this.state.id, this.state.stocks, this.state.name)\n    });\n    } else {\n      alert('Name too short')\n    }\n    let div = e.target.parentElement\n    let text = div.nextSibling\n    div.setAttribute(\"hidden\", true)\n    text.removeAttribute(\"hidden\")\n  }\n  \n  //Cancels name change\n  cancelNameChange(e){\n    let div = e.target.parentElement\n    let text = div.nextSibling\n    div.setAttribute(\"hidden\", true)\n    text.removeAttribute(\"hidden\")\n  }\n\n  //Toggles popup\n  popUpModal = () => {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  //Restores new stock to state on change\n  newStock(e) {\n    e.stopPropagation();\n    const n = e.target.id.split('-')[0]\n    let cpy = {...this.state.newStock}\n    cpy[n] = e.target.value\n    this.setState({\n      newStock: cpy,\n  }, () => {\n    this.props.updatePortfolioState(this.state.id, this.state.stocks, this.state.name)\n  });\n  }\n  //Count total value of stocks\n  countTotal=()=>{\n    let stocks = [...this.state.stocks]\n    let total = 0 \n    for(var i = 0; i<stocks.length; i++){\n      total = parseFloat(stocks[i].tv) + total\n    }\n    total = total.toFixed(2)\n    this.setState({\n      totalValuOfStocks: total\n    })\n  }\n  //Saves and add stock when clicking 'save'\n  saveStock = () => {\n    if(this.state.newStock.name.length>0 && this.state.newStock.quantity > 0){\n      let newstock =  {...this.state.newStock}\n      let name = newstock.name.toUpperCase().trim()\n      if(name.trim().length<1){\n        alert('Name is too short')\n      } else if(newstock.quantity % 1 !== 0){\n        alert(\"Quantity has to be a whole number\")\n      }else {\n        if(this.state.stocks.length>=50){\n          alert('Maximum number of portfolios is 50')\n        } else {\n          fetch('https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol='+name+'&apikey=XDNRE3YNSC6MJXBQ')\n          .then(response => response.json())\n          .then(data => {\n            if(Object.keys(data)[0] === 'Note' || Object.keys(data)[0] === 'Error Message'){\n              alert(Object.values(data)[0])\n            }else {\n              let dataL = data['Time Series (Daily)']\n              let day = Object.keys(dataL)[0]\n              let value = parseFloat(Object.values(dataL[day])[0])\n              newstock.name = name\n              newstock.uv = value.toFixed(2)\n              let totalv = newstock.uv*newstock.quantity\n              newstock.tv = totalv.toFixed(2)\n              newstock.checked = false\n              let len = this.state.stocks.length + 1\n              newstock.id = 'stock' + this.state.id + len \n              var newStocksList = this.state.stocks.concat(newstock)\n              this.setState({\n                stocks: newStocksList,\n                isOpen: !this.state.isOpen,\n            }, () => {\n              this.props.updatePortfolioState(this.state.id, this.state.stocks, this.state.name);\n              this.countTotal()\n            });\n            }\n          })\n        }\n      }\n    } else {\n      alert('Invalid input')\n    }\n  }\n  //Removes selected columns and stocks\n  removeSelected (e) {\n    let stocksCopy = [...this.state.stocks]\n    let selected = stocksCopy.filter(stock => stock.checked === false)\n    \n    this.setState({\n      stocks: selected}, () => {\n    this.props.updatePortfolioState(this.state.id, this.state.stocks, this.state.name)\n    this.countTotal()\n    var clist = document.getElementsByTagName(\"input\");\n    for (var i = 0; i < clist.length; ++i) { clist[i].checked = false; }\n \n  });\n  }\n  //Sets checked to true in state stock when clicking the checkbox\n  setChecked (e, id) {\n    e.stopPropagation()\n    let stocksCpy = Object.assign([], this.state.stocks);\n    let stock = stocksCpy.filter(s=> s.id === id)[0]\n    stock.checked ? stock.checked = false : stock.checked = true\n    this.setState({\n      stocks: stocksCpy,\n  }, () => {\n    this.props.updatePortfolioState(this.state.id, this.state.stocks, this.state.name);\n  });\n\n  }\n\n  //Opens modal and draws graph\n  onOpenModal = (e) => {\n    e.stopPropagation();\n    this.setState({ open: true });\n  };\n  //Closes modal\n  onCloseModal = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const renObjData = this.state.stocks.map((data, index) =>\n          <Stock stock ={data} key={index} setChecked={this.setChecked} currencySymbol={this.state.currencySymbol}/>\n    );\n    const openModal = (this.state.open === true) ?\n      <Graph stocks={this.state.stocks} onCloseModal={this.onCloseModal} open={this.state.open}></Graph> : ''\n    \n\n    return (\n      <div className=\"card\">\n      <script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>\n      <button onClick={(e) => {this.props.closePortfolio(e, this.state.id)}} className = 'close' ></button>\n      <div><div hidden><input onChange={this.changeName} id={this.props.name}></input><button onClick={this.saveNameChange}>Save</button><button onClick={this.cancelNameChange}>Cancel</button></div><p onClick={this.hideTextShowInput}>{this.state.name}</p></div>\n       <div className=\"btngroup\">\n            <button onClick={(e) => {this.fetchCurrencyRate(e, 'USD', 'EUR', '€')}} className=\"button\" id=\"desktop\" >\n            Show in €\n          </button>\n            <button onClick={(e) => {this.fetchCurrencyRate(e, 'EUR', 'USD', '$')}} className=\"button\" id=\"mobile\" >\n            show in $\n          </button>\n\n      </div>\n  \n    <div className=\"table-wrapper\">\n        <table className=\"blueTable\">\n        <tbody>\n          <tr><th>Name</th><th>Value</th><th>Quantity</th><th>Total</th><th>Select</th></tr>\n          {renObjData}\n          </tbody>\n\n        </table>\n        </div>\n        <div className=\"btn-group\">\n\n        <button onClick={this.popUpModal} className=\"button\" id=\"desktop\" >\n        Add in stock\n        </button>\n\n        <button onClick={this.onOpenModal} className=\"button\" id=\"mobile\" >\n        Perf graph         \n        </button>\n        <button onClick={this.removeSelected} className=\"button\" id=\"mobile\" >\n        Remove selected\n        </button>\n        </div>\n        <div>Total stock value: {this.state.totalValuOfStocks}{this.state.currencySymbol}</div>\n        <PopUp show={this.state.isOpen}\n                  onClose={this.popUpModal}>\n                  <form onChange={this.newStock}>\n                  Name: <input id={'name-'+this.state.id} type=\"text\"></input>\n                  Quantity:<input id={'quantity-'+this.state.id} type=\"number\"></input>\n                  <button onClick={this.saveStock}type=\"button\">Save</button>\n                  </form>\n                </PopUp>\n                {openModal}\n                </div>\n            \n              \n            )\n          }\n        }","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './App.css';\r\nimport Portfolio from './components/portfolio.js'\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    let pf = localStorage.getItem('portfolio')\r\n    if(pf !== null){\r\n      pf = JSON.parse(pf)\r\n    } else {\r\n      pf = []\r\n    }\r\n    this.state = {\r\n      portfolio: pf,\r\n      }\r\n      this.addNewPortfolio = this.addNewPortfolio.bind(this);\r\n      this.closePortfolio = this.closePortfolio.bind(this)\r\n      this.updatePortfolioState = this.updatePortfolioState.bind(this)\r\n    }\r\n\r\n    //Set result to state and localStorage\r\n    onSetResult = (result, key) => {\r\n      localStorage.setItem(key, JSON.stringify(result));\r\n      this.setState({ portfolio: result });\r\n    }\r\n    //Updates portfolio when stock updates\r\n    updatePortfolioState(portfolioId, stocks, name){\r\n      let pfCopy =  Object.assign([],  this.state.portfolio);\r\n      for(var i = 0; i<pfCopy.length; i++){\r\n        if(pfCopy[i].id === portfolioId){\r\n          pfCopy[i].name = name\r\n          pfCopy[i].stocks = stocks\r\n        }\r\n      }\r\n      this.setState({portfolio: pfCopy})\r\n      this.onSetResult(pfCopy, 'portfolio')\r\n    }\r\n    //Counts max id\r\n    setId(){\r\n      let pC = [...this.state.portfolio]\r\n      let list =[];\r\n      list = list.concat(0)\r\n      let idList = pC.map(p => p.id)\r\n      idList.map(id => list = list.concat(id))\r\n      let max = (Math.max(...list)) + 1\r\n      return max\r\n    }\r\n    //Adds new empty portfolio\r\n    addNewPortfolio (e) {\r\n      e.stopPropagation();\r\n      let len = this.state.portfolio.length +1\r\n      let id = this.setId()\r\n      if(len<=10){\r\n      let newPortfolio = { name: 'Portfolio ' + len, id: id, stocks: []}\r\n      this.setState({\r\n        portfolio: this.state.portfolio.concat([newPortfolio])\r\n      });\r\n      this.onSetResult(this.state.portfolio.concat([newPortfolio]), 'portfolio')\r\n    } else { \r\n      alert('Too many portfolios. Max amount of portfolios is 10.')\r\n    }\r\n    }\r\n    //Closes and deletes portfolio\r\n    closePortfolio(e, id){\r\n      e.stopPropagation();\r\n      let portfolios = [...this.state.portfolio]\r\n      let selected = portfolios.filter(portfolio => portfolio.id !==  id)\r\n      this.setState({portfolio: selected});\r\n      this.onSetResult(selected, 'portfolio')\r\n  }\r\n\r\n    render(){\r\n      //Adds portfolios from state to the page\r\n      const renObjData = this.state.portfolio.map( (data,index) =>\r\n            <Portfolio name={data.name} total={data.totalValue} updatePortfolioState={this.updatePortfolioState} stocks={data.stocks} closePortfolio={this.closePortfolio} key = {data.id} id={data.id} />\r\n        );\r\n    return (\r\n      <div className=\"App\">\r\n        <header >\r\n\r\n        </header>\r\n        <body>\r\n        <div className=\"addPortfolio\"> <button onClick={this.addNewPortfolio}>Add portfolio</button></div>\r\n        <div className=\"row\">\r\n          {renObjData}\r\n\r\n          </div>\r\n        </body>\r\n        \r\n      </div>\r\n\r\n  )\r\n    }\r\n}\r\n\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}